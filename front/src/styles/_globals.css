
@import 'https://unpkg.com/open-props';
@import 'https://unpkg.com/open-props/normalize.light.min.css';
@import 'https://unpkg.com/open-props/buttons.light.min.css';

.card {
  padding: var(--size-8);
  margin: var(--size-2);
  background-color: var(--surface-3);
  aspect-ratio: var(--ratio-golden);
  border-radius: var(--radius-blob-1);
}

.circle {
  padding: var(--size-8);
  background-color: var(--surface-3);
  aspect-ratio: var(--ratio-golden);
  border-radius: var(--radius-blob-2);
}

.hero {
  line-height: var(--font-lineheight-1);
  font-size: var(--font-size-fluid-fluid-1);
  font-weight: var(--font-weight-2);
}

body {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  margin: 0;
  background-color: var(--surface-1);
  padding: var(--size-7);
  gap: var(--size-7);
}

article,
section,
form,
fieldset,
header,
.page,
.spaced,
#text__lists > div,
#text__code > div,
#text__inline > div {
  display: grid;
  gap: var(--size-4);
}

html {
  block-size: 100%;
  background-color: var(--surface-1);
  color: var(--text-1);
  accent-color: var(--brand);
  font-family: var(--font-serif);
}

main {
  display: flex;
  flex-flow: row wrap;
  align-items: center;
  align-content: center;
  justify-content: center;
  gap: var(--size-10);
}

.surface {
  display: grid;
  --size: var(--size-content-1);
  grid-template-columns: var(--size) var(--size);
  grid-auto-rows: var(--size);
  gap: var(--size-5);

  @media (width <= 480px) {
    & {
      --size: 40vw;
    }
  }

  & > * {
    border-radius: var(--radius-3);
    display: grid;
    place-content: center;
    font-size: var(--font-size-fluid-8);
    font-weight: var(--font-weight-2);
  }
}

button {
  font-weight: var(--font-weight-1);
}

.mewButtonInline {
  display: inline-flex;
  gap: var(--size-2);
  width: 100%;
  padding-bottom: 0.5rem;
  padding-top: 0.5rem;
}

.mewButtonInline button {
  width: 100%;
}

.brand {
  color: var(--brand);
  background-color: var(--brand);
}

.surface-1 {
  background-color: var(--surface-1);
  color: var(--text-2);
}

.surface-2 {
  background-color: var(--surface-2);
  color: var(--text-2);
  text-shadow:
    0 0 10px var(--indigo-5),
    0 0 25px var(--indigo-7);
}

.surface-3 {
  background-color: var(--surface-3);
  color: var(--text-1);
}

.surface-4 {
  background-color: var(--surface-4);
  color: var(--text-1);
}

.text-2 {
  color: var(--text-2);
}

.swatch {
  display: inline-block;
  flex-shrink: 0;
  inline-size: var(--size-8);
  block-size: var(--size-8);
  border-radius: var(--radius-round);

  &.text-1 {
    background-color: var(--text-1);
  }
  &.text-2 {
    background-color: var(--text-2);
  }
}

.rad-shadow {
  border: 1px solid hsl(var(--brand-hue) 10% 50% / 15%);
  box-shadow: 0 1rem 0.5rem -0.5rem;
  box-shadow:
    0 2.8px 2.2px hsl(var(--surface-shadow) / calc(var(--shadow-strength) + 3%)),
    0 6.7px 5.3px hsl(var(--surface-shadow) / calc(var(--shadow-strength) + 1%)),
    0 12.5px 10px hsl(var(--surface-shadow) / calc(var(--shadow-strength) + 2%)),
    0 22.3px 17.9px hsl(var(--surface-shadow) / calc(var(--shadow-strength) + 2%)),
    0 41.8px 33.4px hsl(var(--surface-shadow) / calc(var(--shadow-strength) + 3%)),
    0 100px 80px hsl(var(--surface-shadow) / var(--shadow-strength));
}

section {
  display: grid;
  gap: var(--size-6);
}

h1 {
  font-weight: var(--font-weight-2);
  font-size: var(--font-size-fluid-7);
}

.form-control {
  align-items: center;
  gap: var(--size-2);
}

p {
  max-inline-size: var(--size-content-1);
  font-size: var(--font-size-fluid-4);
  line-height: var(--font-lineheight-3);
}

header {
  display: inline-grid;
  gap: var(--size-3);
}

form {
  gap: var(--size-2);
  display: flex;
  flex-direction: column;
  gap: var(--size-2);
  & > div {
    display: inline-flex;
    align-items: center;
    gap: var(--size-2);
  }
}

form button[type='submit'] {
  border: none;

  background-color: var(--brand);
  color: var(--stone-1);
  cursor: pointer;
  transition: background-color 0.3s ease;
}

form button[type='submit']:hover {
  background-color: var(--brand-dark);
  color: var(--brand);
}

form button[type='button'] {
  border: none;
  background-color: var(--surface-2);
  color: var(--text-1);
  cursor: pointer;
  transition: background-color 0.3s ease;
}

form button[type='button'].nyaSelected {
  color: var(--stone-1);
  background-color: var(--brand);
}

form button[type='button']:hover {
  background-color: var(--surface-3);
}

form input,
form select {
  background-color: var(--surface-2);
  color: var(--text-1);
}

form input {
  width: 100%;
}

form label {
  font-weight: bold;
  color: var(--text-1);
}

.nyaField {
  width: 100%;
  flex-direction: column;
  display: flex;
}
.nyaField:empty {
  display: none;
}
.nyaRows {
  display: flex;
  flex-direction: row;
  gap: var(--size-2);
}

.nyaButton {
  width: auto;
}

.nyaLink {
  width: 100%;
}
.nyaLable {
  display: inline-flex;
  gap: var(--size-1);
}
.parent {
  display: grid;
  grid-auto-flow: row dense;
  /* grid-auto-columns: 1fr; 
  grid-auto-rows: 1fr; 
  grid-template-columns: 1fr 1fr 1fr; 
  grid-template-rows: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;  */
  gap: var(--size-2);
  grid-template-areas:
    'nyaUrlStyle nyaUrlStyle nyaUrlStyle'
    'nyaUrl nyaUrl nyaUrl'
    'nyaResponse nyaResponse nyaResponse'
    'nyaExpr NyaEntrs NyaLength'
    'nyaPrefix nyaPrefix nyaPrefix'
    'nyaSubmit nyaSubmit nyaSubmit'
    'nyaStat nyaStat nyaStat'
    '. . .'
    '. . .'
    '. . .';
  justify-content: stretch;
  align-content: space-evenly;
  justify-items: stretch;
  align-items: center;
}

.nyaUrl {
  grid-area: nyaUrl;
}
.nyaUrlStyle {
  grid-area: nyaUrlStyle;
  gap: var(--size-4);
}
.nyaResponse {
  justify-self: stretch;
  align-self: stretch;
  grid-area: nyaResponse;
}
.nyaExpr {
  grid-area: nyaExpr;
}
.NyaEntrs {
  grid-area: NyaEntrs;
}
.NyaLength {
  grid-area: NyaLength;
}
.nyaPrefix {
  grid-area: nyaPrefix;
}
.nyaSubmit {
  grid-area: nyaSubmit;
}

.nyaErrorLable {
  color: var(--brand);
  font-size: var(--font-size-fluid-1);
  font-weight: var(--font-weight-8);
  margin-top: var(--size-2);
}

.nyaWarning {
  color: var(--brand);
  font-size: var(--font-size-fluid-1);
  font-weight: var(--font-weight-8);
}

.nyaStat {
  grid-area: nyaStat;
  display: inline-flex;
  gap: var(--size-2);
  align-items: center;
  justify-content: center;
  padding: var(--size-2);
  border-radius: var(--radius-2);
  background-color: var(--brand);
  color: var(--surface-1);
  font-size: var(--font-size-fluid-0);
  font-weight: var(--font-weight-2);
}

.nyaStat:empty {
  display: none;
}

.nyaLogo {
  margin: var(--size-4);
  display: inline-flex;
  gap: var(--size-2);
  align-items: center;
  justify-content: center;
  padding: var(--size-2);
  border-radius: var(--radius-2);
  background-color: var(--brand);
  color: var(--surface-1);
  font-size: var(--font-size-8);
  font-weight: var(--font-weight-2);
  border-radius: var(--radius-blob-3);
}

blockquote {
  --_accent-1: var(--lime-5);
  --_accent-2: var(--lime-4);
  --_bg: var(--surface-2);
  --_ink: var(--text-1);

  color: var(--_ink);
  border-color: var(--_accent-2);
  background-color: var(--_bg);
  justify-self: flex-start;
}

.nyaFooter {
  display: flex;
  justify-content: center;
  align-items: center;
}

.nyaGitHubLink {
  display: inline-flex;
  align-items: center;
  gap: var(--size-2);
  color: var(--text-1);
  text-decoration: none;
  transition: color 0.3s ease;
}

.nyaGitHubLink:hover {
  color: var(--brand);
}

@media (max-width: 768px) {
  .parent {
    grid-template-areas:
      'nyaUrlStyle'
      'nyaUrl'
      'nyaResponse'
      'nyaExpr'
      'NyaEntrs'
      'NyaLength'
      'nyaPrefix'
      'nyaSubmit'
      'nyaStat';
  }
}

@media (max-width: 768px) {
  .nyaRows {
    flex-direction: column;
  }

  .nyaLink {
    word-break: break-all;
  }

  .nyaLogo {
    font-size: var(--font-size-6);
  }

  .nyaStat {
    font-size: var(--font-size-fluid-0);
  }
}

@media (max-width: 768px) {
  .card,
  .circle {
    border-radius: 0;
  }

  form {
    gap: var(--size-4);
  }

  .nyaField {
    gap: var(--size-2);
  }

  .mewButtonInline {
    flex-wrap: wrap;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slideIn {
  from {
    transform: translateY(20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes scaleIn {
  from {
    transform: scale(0.8);
    opacity: 0;
  }
  to {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes paralax {
  from {
    background-position: 0 0;
  }
  to {
    background-position: 100% 100%;
  }
}

.fade-in {
  animation: fadeIn 0.5s ease-in-out;
}

.slide-in {
  animation: slideIn 0.5s ease-in-out;
}

.scale-in {
  animation: scaleIn 0.5s ease-in-out;
}

.fade-enter-active {
  transition: opacity 0.3s ease-in-out;
}

.fade-enter-from,
.fade-leave-to {
  opacity: 0;
}

.fade-enter-active,
.fade-leave-active {
  transition: opacity 0.5s;
}

.fade-enter-from,
.fade-leave-to {
  opacity: 0;
}

.fade-enter-to,
.fade-leave-from {
  opacity: 1;
}
