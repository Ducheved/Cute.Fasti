name: Publish Docker images
on:
  push:
    branches: [ main ]
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push api image
      uses: docker/build-push-action@v2
      with:
        context: ./api
        file: ./api/Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/cute.fasti-api:latest
    - name: Build and push frnt image
      uses: docker/build-push-action@v2
      with:
        context: ./front
        file: ./front/Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/cute.fasti-front:latest
        build-args: 
          VITE_API_URL=${{ secrets.VITE_API_URL }}
  deploy:
    needs: build-and-push
    runs-on: self-hosted
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Create .env file
      run: |
        echo REDIS_ADDRESS=${{ secrets.REDIS_ADDRESS }} >> .env
        echo REDIS_PORT=${{ secrets.REDIS_PORT }} >> .env
        echo REDIS_DB=${{ secrets.REDIS_DB }} >> .env
        echo REDIS_USER=${{ secrets.REDIS_USER }} >> .env
        echo REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }} >> .env
        echo REDIS_PREFIX=${{ secrets.REDIS_PREFIX }} >> .env
        echo ADDRESS=${{ secrets.ADDRESS }} >> .env
        echo PORT_API=${{ secrets.PORT_API }} >> .env
        echo CORS_ORIGIN=${{ secrets.CORS_ORIGIN }} >> .env
        echo VITE_API_URL=${{ secrets.VITE_API_URL }} >> .env
        echo PORT_API_LOCAL=${{ secrets.PORT_API_LOCAL }} >> .env
        echo PORT_FRNT_LOCAL=${{ secrets.PORT_FRNT_LOCAL }} >> .env
    - name: Stop and remove previous deployment
      run: docker-compose -f docker-compose.prod.yml down --rmi all
    - name: Deploy to server
      run: |
        docker pull ${{ secrets.DOCKERHUB_USERNAME }}/cute.fasti-api:latest
        docker pull ${{ secrets.DOCKERHUB_USERNAME }}/cute.fasti-front:latest
        docker-compose -f docker-compose.prod.yml up -d